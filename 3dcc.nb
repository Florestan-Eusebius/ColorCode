(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    102225,       1843]
NotebookOptionsPosition[    101473,       1822]
NotebookOutlinePosition[    101866,       1838]
CellTagsIndexPosition[    101823,       1835]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "growing", " ", "basis"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"growingBasis", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rOrigin", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"gOrigin", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"bOrigin", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"yOrigin", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "generate", " ", "lattice", " ", "points", 
     " ", "for", " ", "a", " ", "given", " ", "origin", " ", "and", " ", 
     "basis"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"latticeColorK", "[", 
      RowBox[{"origin_", ",", "basis_", ",", "k_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vertices", "=", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"vertices", ",", 
                RowBox[{"origin", "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"basis", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                 RowBox[{"y", " ", 
                  RowBox[{"basis", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "+", 
                 RowBox[{"z", " ", 
                  RowBox[{"basis", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"z", ",", "0", ",", 
                RowBox[{"k", "-", "x", "-", "y", "-", "1"}]}], "}"}]}], "]"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", "0", ",", 
              RowBox[{"k", "-", "x", "-", "1"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "vertices"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "generate", " ", "lattice", " ", "points", 
     " ", "for", " ", "multiple", " ", "origins"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"latticeK", "[", 
      RowBox[{"origins_", ",", "basis_", ",", "k_"}], "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"latticeColorK", "[", 
        RowBox[{"origin", ",", "basis", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"origin", ",", "origins"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Generate", " ", "vertices"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"vertices", "=", 
     RowBox[{"latticeK", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rOrigin", ",", "gOrigin", ",", "bOrigin", ",", "yOrigin"}], 
        "}"}], ",", "growingBasis", ",", "5"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"colors", "=", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Orange"}], "}"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "the", " ", "vertices"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"colors", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "vertices", "]"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}], ",", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}], 
     ",", 
     RowBox[{"AspectRatio", "->", "1"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.941250371765716*^9, 3.941250371769381*^9}, {
  3.941250433821493*^9, 3.9412504854201727`*^9}, {3.941251507323024*^9, 
  3.941251507711534*^9}, {3.9412527712385683`*^9, 3.9412527718947973`*^9}, {
  3.941252836048805*^9, 3.941252836215789*^9}, {3.941253524578764*^9, 
  3.941253553963764*^9}, {3.9412535963617897`*^9, 3.941253596647341*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"86a360cf-f174-4c7c-8532-398bf87ac3c9"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], PointSize[Large], 
    Point3DBox[{{0, 0, 0}, {1, 1, 0}, {2, 2, 0}, {3, 3, 0}, {4, 4, 0}, {1, 0, 
     1}, {2, 1, 1}, {3, 2, 1}, {4, 3, 1}, {2, 0, 2}, {3, 1, 2}, {4, 2, 2}, {3,
      0, 3}, {4, 1, 3}, {4, 0, 4}, {0, 1, 1}, {1, 2, 1}, {2, 3, 1}, {3, 4, 
     1}, {1, 1, 2}, {2, 2, 2}, {3, 3, 2}, {2, 1, 3}, {3, 2, 3}, {3, 1, 4}, {0,
      2, 2}, {1, 3, 2}, {2, 4, 2}, {1, 2, 3}, {2, 3, 3}, {2, 2, 4}, {0, 3, 
     3}, {1, 4, 3}, {1, 3, 4}, {0, 4, 4}}]}, 
   {RGBColor[0, 1, 0], PointSize[Large], 
    Point3DBox[{{1, 0, 0}, {2, 1, 0}, {3, 2, 0}, {4, 3, 0}, {5, 4, 0}, {2, 0, 
     1}, {3, 1, 1}, {4, 2, 1}, {5, 3, 1}, {3, 0, 2}, {4, 1, 2}, {5, 2, 2}, {4,
      0, 3}, {5, 1, 3}, {5, 0, 4}, {1, 1, 1}, {2, 2, 1}, {3, 3, 1}, {4, 4, 
     1}, {2, 1, 2}, {3, 2, 2}, {4, 3, 2}, {3, 1, 3}, {4, 2, 3}, {4, 1, 4}, {1,
      2, 2}, {2, 3, 2}, {3, 4, 2}, {2, 2, 3}, {3, 3, 3}, {3, 2, 4}, {1, 3, 
     3}, {2, 4, 3}, {2, 3, 4}, {1, 4, 4}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], 
    Point3DBox[
     NCache[{{Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
       Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
       Rational[5, 2], Rational[5, 2], Rational[1, 2]}, {
       Rational[7, 2], Rational[7, 2], Rational[1, 2]}, {
       Rational[9, 2], Rational[9, 2], Rational[1, 2]}, {
       Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {
       Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {
       Rational[7, 2], Rational[5, 2], Rational[3, 2]}, {
       Rational[9, 2], Rational[7, 2], Rational[3, 2]}, {
       Rational[5, 2], Rational[1, 2], Rational[5, 2]}, {
       Rational[7, 2], Rational[3, 2], Rational[5, 2]}, {
       Rational[9, 2], Rational[5, 2], Rational[5, 2]}, {
       Rational[7, 2], Rational[1, 2], Rational[7, 2]}, {
       Rational[9, 2], Rational[3, 2], Rational[7, 2]}, {
       Rational[9, 2], Rational[1, 2], Rational[9, 2]}, {
       Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {
       Rational[3, 2], Rational[5, 2], Rational[3, 2]}, {
       Rational[5, 2], Rational[7, 2], Rational[3, 2]}, {
       Rational[7, 2], Rational[9, 2], Rational[3, 2]}, {
       Rational[3, 2], Rational[3, 2], Rational[5, 2]}, {
       Rational[5, 2], Rational[5, 2], Rational[5, 2]}, {
       Rational[7, 2], Rational[7, 2], Rational[5, 2]}, {
       Rational[5, 2], Rational[3, 2], Rational[7, 2]}, {
       Rational[7, 2], Rational[5, 2], Rational[7, 2]}, {
       Rational[7, 2], Rational[3, 2], Rational[9, 2]}, {
       Rational[1, 2], Rational[5, 2], Rational[5, 2]}, {
       Rational[3, 2], Rational[7, 2], Rational[5, 2]}, {
       Rational[5, 2], Rational[9, 2], Rational[5, 2]}, {
       Rational[3, 2], Rational[5, 2], Rational[7, 2]}, {
       Rational[5, 2], Rational[7, 2], Rational[7, 2]}, {
       Rational[5, 2], Rational[5, 2], Rational[9, 2]}, {
       Rational[1, 2], Rational[7, 2], Rational[7, 2]}, {
       Rational[3, 2], Rational[9, 2], Rational[7, 2]}, {
       Rational[3, 2], Rational[7, 2], Rational[9, 2]}, {
       Rational[1, 2], Rational[9, 2], Rational[9, 2]}}, CompressedData["
1:eJyNksENgCAUQ3+UIyc3MA4iMziCiWdXdgyOeumBpw2SkIby09/ymfdzO4aI
WJ49hta1fmMFik+lRfG5tCh+Ki1Sn2fpsr90eS/dDJ7+UqdOOszHPBn19Mec
LjeRuZxf19/pOeS8eM9+rCPPebj/4ubp5uDe428O+un57r33+1/f7+5C5Q==

      "]]]}, 
   {RGBColor[1, 0.5, 0], PointSize[Large], 
    Point3DBox[
     NCache[{{Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
       Rational[3, 2], Rational[3, 2], Rational[-1, 2]}, {
       Rational[5, 2], Rational[5, 2], Rational[-1, 2]}, {
       Rational[7, 2], Rational[7, 2], Rational[-1, 2]}, {
       Rational[9, 2], Rational[9, 2], Rational[-1, 2]}, {
       Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {
       Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {
       Rational[7, 2], Rational[5, 2], Rational[1, 2]}, {
       Rational[9, 2], Rational[7, 2], Rational[1, 2]}, {
       Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {
       Rational[7, 2], Rational[3, 2], Rational[3, 2]}, {
       Rational[9, 2], Rational[5, 2], Rational[3, 2]}, {
       Rational[7, 2], Rational[1, 2], Rational[5, 2]}, {
       Rational[9, 2], Rational[3, 2], Rational[5, 2]}, {
       Rational[9, 2], Rational[1, 2], Rational[7, 2]}, {
       Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {
       Rational[3, 2], Rational[5, 2], Rational[1, 2]}, {
       Rational[5, 2], Rational[7, 2], Rational[1, 2]}, {
       Rational[7, 2], Rational[9, 2], Rational[1, 2]}, {
       Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
       Rational[5, 2], Rational[5, 2], Rational[3, 2]}, {
       Rational[7, 2], Rational[7, 2], Rational[3, 2]}, {
       Rational[5, 2], Rational[3, 2], Rational[5, 2]}, {
       Rational[7, 2], Rational[5, 2], Rational[5, 2]}, {
       Rational[7, 2], Rational[3, 2], Rational[7, 2]}, {
       Rational[1, 2], Rational[5, 2], Rational[3, 2]}, {
       Rational[3, 2], Rational[7, 2], Rational[3, 2]}, {
       Rational[5, 2], Rational[9, 2], Rational[3, 2]}, {
       Rational[3, 2], Rational[5, 2], Rational[5, 2]}, {
       Rational[5, 2], Rational[7, 2], Rational[5, 2]}, {
       Rational[5, 2], Rational[5, 2], Rational[7, 2]}, {
       Rational[1, 2], Rational[7, 2], Rational[5, 2]}, {
       Rational[3, 2], Rational[9, 2], Rational[5, 2]}, {
       Rational[3, 2], Rational[7, 2], Rational[7, 2]}, {
       Rational[1, 2], Rational[9, 2], Rational[7, 2]}}, CompressedData["
1:eJyFktEJgDAMRIP62a9uIA7SzuAIgt+O6CqO0U8FOSUPQoVy5EzvLtF5O9Z9
MLPlOaPpuQrwfLEVj+Kn6lF8qh7F5+qR+vSXLt9L9/MtXjeBZ1+DDueTDv0j
3Yw+8szNHKyZVzXvq6YP56FuNBf3wT7moB7vR/tirsiXe43m6OXq7Y+5et+f
Ov9/dwPj/0zS
      "]]]}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  ImageSize->{350.1818675254074, 347.4373081313029},
  ImageSizeRaw->Automatic,
  ViewPoint->{-3.146756050414035, 1.1629197431954732`, -0.44220360702831196`},
  
  ViewVertical->{-0.29011640232897623`, 0.9022703961973738, 
   0.3189680316983597}]], "Output",
 CellChangeTimes->{
  3.941250372925666*^9, {3.941250445646974*^9, 3.941250485829427*^9}, 
   3.941251508566279*^9, {3.9412515671367617`*^9, 3.941251569787661*^9}, 
   3.941252772872581*^9, 3.941252837354206*^9, 3.9412535255487347`*^9, 
   3.94125355643015*^9, 3.941253597185793*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"e35feafc-bdae-4c8d-b7ad-eb97be63472d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "growing", " ", "basis"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"growingBasis", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rOrigin", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"gOrigin", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"bOrigin", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"yOrigin", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "generate", " ", "lattice", " ", "points", 
     " ", "for", " ", "a", " ", "given", " ", "origin", " ", "and", " ", 
     "basis"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"latticeColorK", "[", 
      RowBox[{"origin_", ",", "basis_", ",", "k_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vertices", "=", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"vertices", ",", 
                RowBox[{"origin", "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"basis", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                 RowBox[{"y", " ", 
                  RowBox[{"basis", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "+", 
                 RowBox[{"z", " ", 
                  RowBox[{"basis", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"z", ",", "0", ",", 
                RowBox[{"k", "-", "x", "-", "y", "-", "1"}]}], "}"}]}], "]"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", "0", ",", 
              RowBox[{"k", "-", "x", "-", "1"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "vertices"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "generate", " ", "lattice", " ", "points", 
     " ", "for", " ", "multiple", " ", "origins"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"latticeK", "[", 
      RowBox[{"origins_", ",", "basis_", ",", "k_"}], "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"latticeColorK", "[", 
        RowBox[{"origin", ",", "basis", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"origin", ",", "origins"}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "generate", " ", "faces", " ", "from", " ", 
     "lattice", " ", "points"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"facesColorFromLattice", "[", "vertices_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"faces", "=", 
          RowBox[{"{", "}"}]}], ",", "vertexI", ",", "vertexJ", ",", 
         "vertexK", ",", "vertexIJ", ",", "vertexDIJ", ",", "vertexIJK"}], 
        "}"}], ",", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"vertexI", "=", 
                RowBox[{"vertices", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"vertexJ", "=", 
                RowBox[{"vertices", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "j"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"vertexK", "=", 
                RowBox[{"vertices", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "k"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"vertexIJ", "=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"vertexI", "+", "vertexJ"}], ")"}], "/", "2"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"vertexDIJ", "=", 
                RowBox[{"(", 
                 RowBox[{"vertexI", "-", "vertexJ"}], ")"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"vertexIJK", "=", 
                RowBox[{"vertexK", "-", "vertexIJ"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Norm", "[", "vertexIJK", "]"}], "<", "1"}], "&&", 
                  
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"Dot", "[", 
                    RowBox[{"vertexIJK", ",", "vertexDIJ"}], "]"}], "]"}], 
                   "<", "1*^-10"}], "&&", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", "vertexDIJ", "]"}], "-", "1"}], 
                    "]"}], "<", "1*^-10"}]}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"faces", ",", 
                   RowBox[{"{", 
                    RowBox[{"vertexI", ",", "vertexJ", ",", "vertexK"}], 
                    "}"}]}], "]"}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"vertices", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"vertices", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"vertices", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "faces"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"facesFromLattice", "[", "vertices_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"facesColorFromLattice", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"vertices", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"vertices", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"vertices", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"facesColorFromLattice", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"vertices", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"vertices", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"vertices", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"facesColorFromLattice", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"vertices", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"vertices", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"vertices", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"facesColorFromLattice", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"vertices", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"vertices", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"vertices", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "}"}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Generate", " ", "vertices"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vertices", "=", 
     RowBox[{"latticeK", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rOrigin", ",", "gOrigin", ",", "bOrigin", ",", "yOrigin"}], 
        "}"}], ",", "growingBasis", ",", "3"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"colors", "=", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Yellow"}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Generate", " ", "faces"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"faces", "=", 
     RowBox[{"facesFromLattice", "[", "vertices", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "the", " ", "vertices", " ", "and", " ", "faces"}], 
    "*)"}], "\n", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"colors", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "vertices", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"colors", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"Opacity", "[", "0.9", "]"}], ",", 
           RowBox[{"Polygon", "[", 
            RowBox[{"faces", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.941254559942318*^9, 3.941254581419169*^9}, {
  3.941254659129414*^9, 3.941254659495441*^9}, {3.941254758316922*^9, 
  3.941254758983576*^9}, {3.941254829774787*^9, 3.9412548631508923`*^9}, {
  3.9414034256187143`*^9, 3.941403425744594*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"620ecf43-49d0-4232-a013-1fa5b6a24a50"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[1, 0, 0], PointSize[Large], 
     Point3DBox[{{0, 0, 0}, {1, 1, 0}, {2, 2, 0}, {1, 0, 1}, {2, 1, 1}, {2, 0,
       2}, {0, 1, 1}, {1, 2, 1}, {1, 1, 2}, {0, 2, 2}}]}, 
    {RGBColor[0, 1, 0], PointSize[Large], 
     Point3DBox[{{1, 0, 0}, {2, 1, 0}, {3, 2, 0}, {2, 0, 1}, {3, 1, 1}, {3, 0,
       2}, {1, 1, 1}, {2, 2, 1}, {2, 1, 2}, {1, 2, 2}}]}, 
    {RGBColor[0, 0, 1], PointSize[Large], 
     Point3DBox[
      NCache[{{Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
        Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
        Rational[5, 2], Rational[5, 2], Rational[1, 2]}, {
        Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {
        Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {
        Rational[5, 2], Rational[1, 2], Rational[5, 2]}, {
        Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {
        Rational[3, 2], Rational[5, 2], Rational[3, 2]}, {
        Rational[3, 2], Rational[3, 2], Rational[5, 2]}, {
        Rational[1, 2], Rational[5, 2], Rational[5, 2]}}, {{0.5, 0.5, 0.5}, {
       1.5, 1.5, 0.5}, {2.5, 2.5, 0.5}, {1.5, 0.5, 1.5}, {2.5, 1.5, 1.5}, {
       2.5, 0.5, 2.5}, {0.5, 1.5, 1.5}, {1.5, 2.5, 1.5}, {1.5, 1.5, 2.5}, {
       0.5, 2.5, 2.5}}]]}, 
    {RGBColor[1, 1, 0], PointSize[Large], 
     Point3DBox[
      NCache[{{Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
        Rational[3, 2], Rational[3, 2], Rational[-1, 2]}, {
        Rational[5, 2], Rational[5, 2], Rational[-1, 2]}, {
        Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {
        Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {
        Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {
        Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {
        Rational[3, 2], Rational[5, 2], Rational[1, 2]}, {
        Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
        Rational[1, 2], Rational[5, 2], Rational[3, 2]}}, {{0.5, 0.5, -0.5}, {
       1.5, 1.5, -0.5}, {2.5, 2.5, -0.5}, {1.5, 0.5, 0.5}, {2.5, 1.5, 0.5}, {
       2.5, 0.5, 1.5}, {0.5, 1.5, 0.5}, {1.5, 2.5, 0.5}, {1.5, 1.5, 1.5}, {
       0.5, 2.5, 1.5}}]]}}, {
    {RGBColor[1, 0, 0], Opacity[0.9], 
     Polygon3DBox[
      NCache[{{{Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
         Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {1, 0, 0}}, {{
         Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {1, 0, 0}}, {{
         Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {1, 1, 1}}, {{
         Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
         Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {1, 1, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[-1, 2]}, {2, 1, 0}}, {{
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {2, 1, 0}}, {{
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {1, 1, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {2, 1, 0}}, {{
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {2, 2, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {1, 1, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[5, 2], Rational[1, 2]}, {2, 2, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {1, 1, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {2, 2, 1}}, {{
         Rational[5, 2], Rational[5, 2], Rational[1, 2]}, {
         Rational[5, 2], Rational[5, 2], Rational[-1, 2]}, {3, 2, 0}}, {{
         Rational[5, 2], Rational[5, 2], Rational[1, 2]}, {
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {3, 2, 0}}, {{
         Rational[5, 2], Rational[5, 2], Rational[1, 2]}, {
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {2, 2, 1}}, {{
         Rational[5, 2], Rational[5, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[5, 2], Rational[1, 2]}, {2, 2, 1}}, {{
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {2, 0, 1}}, {{
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {1, 1, 1}}, {{
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {2, 0, 1}}, {{
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {2, 1, 2}}, {{
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {1, 1, 1}}, {{
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {2, 1, 2}}, {{
         Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {3, 1, 1}}, {{
         Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {2, 2, 1}}, {{
         Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {3, 1, 1}}, {{
         Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {2, 1, 2}}, {{
         Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {2, 2, 1}}, {{
         Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {2, 1, 2}}, {{
         Rational[5, 2], Rational[1, 2], Rational[5, 2]}, {
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {3, 0, 2}}, {{
         Rational[5, 2], Rational[1, 2], Rational[5, 2]}, {
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {2, 1, 2}}, {{
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {1, 1, 1}}, {{
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {1, 1, 1}}, {{
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {1, 2, 2}}, {{
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[1, 2], Rational[5, 2], Rational[3, 2]}, {1, 2, 2}}, {{
         Rational[3, 2], Rational[5, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[5, 2], Rational[1, 2]}, {2, 2, 1}}, {{
         Rational[3, 2], Rational[5, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {2, 2, 1}}, {{
         Rational[3, 2], Rational[5, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {1, 2, 2}}, {{
         Rational[3, 2], Rational[5, 2], Rational[3, 2]}, {
         Rational[1, 2], Rational[5, 2], Rational[3, 2]}, {1, 2, 2}}, {{
         Rational[3, 2], Rational[3, 2], Rational[5, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {2, 1, 2}}, {{
         Rational[3, 2], Rational[3, 2], Rational[5, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {1, 2, 2}}, {{
         Rational[1, 2], Rational[5, 2], Rational[5, 2]}, {
         Rational[1, 2], Rational[5, 2], Rational[3, 2]}, {1, 2, 2}}}, {{{0.5,
          0.5, 0.5}, {0.5, 0.5, -0.5}, {1, 0, 0}}, {{0.5, 0.5, 0.5}, {1.5, 
         0.5, 0.5}, {1, 0, 0}}, {{0.5, 0.5, 0.5}, {1.5, 0.5, 0.5}, {1, 1, 
         1}}, {{0.5, 0.5, 0.5}, {0.5, 1.5, 0.5}, {1, 1, 1}}, {{1.5, 1.5, 
         0.5}, {1.5, 1.5, -0.5}, {2, 1, 0}}, {{1.5, 1.5, 0.5}, {1.5, 0.5, 
         0.5}, {2, 1, 0}}, {{1.5, 1.5, 0.5}, {1.5, 0.5, 0.5}, {1, 1, 1}}, {{
         1.5, 1.5, 0.5}, {2.5, 1.5, 0.5}, {2, 1, 0}}, {{1.5, 1.5, 0.5}, {2.5, 
         1.5, 0.5}, {2, 2, 1}}, {{1.5, 1.5, 0.5}, {0.5, 1.5, 0.5}, {1, 1, 
         1}}, {{1.5, 1.5, 0.5}, {1.5, 2.5, 0.5}, {2, 2, 1}}, {{1.5, 1.5, 
         0.5}, {1.5, 1.5, 1.5}, {1, 1, 1}}, {{1.5, 1.5, 0.5}, {1.5, 1.5, 
         1.5}, {2, 2, 1}}, {{2.5, 2.5, 0.5}, {2.5, 2.5, -0.5}, {3, 2, 0}}, {{
         2.5, 2.5, 0.5}, {2.5, 1.5, 0.5}, {3, 2, 0}}, {{2.5, 2.5, 0.5}, {2.5, 
         1.5, 0.5}, {2, 2, 1}}, {{2.5, 2.5, 0.5}, {1.5, 2.5, 0.5}, {2, 2, 
         1}}, {{1.5, 0.5, 1.5}, {1.5, 0.5, 0.5}, {2, 0, 1}}, {{1.5, 0.5, 
         1.5}, {1.5, 0.5, 0.5}, {1, 1, 1}}, {{1.5, 0.5, 1.5}, {2.5, 0.5, 
         1.5}, {2, 0, 1}}, {{1.5, 0.5, 1.5}, {2.5, 0.5, 1.5}, {2, 1, 2}}, {{
         1.5, 0.5, 1.5}, {1.5, 1.5, 1.5}, {1, 1, 1}}, {{1.5, 0.5, 1.5}, {1.5, 
         1.5, 1.5}, {2, 1, 2}}, {{2.5, 1.5, 1.5}, {2.5, 1.5, 0.5}, {3, 1, 
         1}}, {{2.5, 1.5, 1.5}, {2.5, 1.5, 0.5}, {2, 2, 1}}, {{2.5, 1.5, 
         1.5}, {2.5, 0.5, 1.5}, {3, 1, 1}}, {{2.5, 1.5, 1.5}, {2.5, 0.5, 
         1.5}, {2, 1, 2}}, {{2.5, 1.5, 1.5}, {1.5, 1.5, 1.5}, {2, 2, 1}}, {{
         2.5, 1.5, 1.5}, {1.5, 1.5, 1.5}, {2, 1, 2}}, {{2.5, 0.5, 2.5}, {2.5, 
         0.5, 1.5}, {3, 0, 2}}, {{2.5, 0.5, 2.5}, {2.5, 0.5, 1.5}, {2, 1, 
         2}}, {{0.5, 1.5, 1.5}, {0.5, 1.5, 0.5}, {1, 1, 1}}, {{0.5, 1.5, 
         1.5}, {1.5, 1.5, 1.5}, {1, 1, 1}}, {{0.5, 1.5, 1.5}, {1.5, 1.5, 
         1.5}, {1, 2, 2}}, {{0.5, 1.5, 1.5}, {0.5, 2.5, 1.5}, {1, 2, 2}}, {{
         1.5, 2.5, 1.5}, {1.5, 2.5, 0.5}, {2, 2, 1}}, {{1.5, 2.5, 1.5}, {1.5, 
         1.5, 1.5}, {2, 2, 1}}, {{1.5, 2.5, 1.5}, {1.5, 1.5, 1.5}, {1, 2, 
         2}}, {{1.5, 2.5, 1.5}, {0.5, 2.5, 1.5}, {1, 2, 2}}, {{1.5, 1.5, 
         2.5}, {1.5, 1.5, 1.5}, {2, 1, 2}}, {{1.5, 1.5, 2.5}, {1.5, 1.5, 
         1.5}, {1, 2, 2}}, {{0.5, 2.5, 2.5}, {0.5, 2.5, 1.5}, {1, 2, 
         2}}}]]}, 
    {RGBColor[0, 1, 0], Opacity[0.9], 
     Polygon3DBox[
      NCache[{{{Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
         Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {0, 0, 0}}, {{
         Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
         Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {1, 1, 0}}, {{
         Rational[3, 2], Rational[3, 2], Rational[-1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {1, 1, 0}}, {{
         Rational[3, 2], Rational[3, 2], Rational[-1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {2, 2, 0}}, {{
         Rational[5, 2], Rational[5, 2], Rational[-1, 2]}, {
         Rational[5, 2], Rational[5, 2], Rational[1, 2]}, {2, 2, 0}}, {{
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {
         Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {1, 1, 0}}, {{
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {
         Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {1, 0, 1}}, {{
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {1, 1, 0}}, {{
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {2, 1, 1}}, {{
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {1, 0, 1}}, {{
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {2, 1, 1}}, {{
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {2, 2, 0}}, {{
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {2, 1, 1}}, {{
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[5, 2], Rational[5, 2], Rational[1, 2]}, {2, 2, 0}}, {{
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {2, 1, 1}}, {{
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {2, 1, 1}}, {{
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {2, 0, 2}}, {{
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {
         Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {2, 1, 1}}, {{
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}, {
         Rational[5, 2], Rational[1, 2], Rational[5, 2]}, {2, 0, 2}}, {{
         Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {1, 1, 0}}, {{
         Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {0, 1, 1}}, {{
         Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {1, 1, 0}}, {{
         Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {1, 2, 1}}, {{
         Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {0, 1, 1}}, {{
         Rational[1, 2], Rational[3, 2], Rational[1, 2]}, {
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {1, 2, 1}}, {{
         Rational[3, 2], Rational[5, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {2, 2, 0}}, {{
         Rational[3, 2], Rational[5, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {1, 2, 1}}, {{
         Rational[3, 2], Rational[5, 2], Rational[1, 2]}, {
         Rational[5, 2], Rational[5, 2], Rational[1, 2]}, {2, 2, 0}}, {{
         Rational[3, 2], Rational[5, 2], Rational[1, 2]}, {
         Rational[3, 2], Rational[5, 2], Rational[3, 2]}, {1, 2, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {2, 1, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}, {1, 2, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {2, 1, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}, {1, 1, 2}}, {{
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[5, 2], Rational[3, 2], Rational[3, 2]}, {2, 1, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {1, 2, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {1, 1, 2}}, {{
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[5, 2], Rational[3, 2]}, {1, 2, 1}}, {{
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[3, 2], Rational[5, 2]}, {1, 1, 2}}, {{
         Rational[1, 2], Rational[5, 2], Rational[3, 2]}, {
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {1, 2, 1}}, {{
         Rational[1, 2], Rational[5, 2], Rational[3, 2]}, {
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}, {0, 2, 2}}, {{
         Rational[1, 2], Rational[5, 2], Rational[3, 2]}, {
         Rational[3, 2], Rational[5, 2], Rational[3, 2]}, {1, 2, 1}}, {{
         Rational[1, 2], Rational[5, 2], Rational[3, 2]}, {
         Rational[1, 2], Rational[5, 2], Rational[5, 2]}, {0, 2, 2}}}, {{{0.5,
          0.5, -0.5}, {0.5, 0.5, 0.5}, {0, 0, 0}}, {{0.5, 0.5, -0.5}, {0.5, 
         0.5, 0.5}, {1, 1, 0}}, {{1.5, 1.5, -0.5}, {1.5, 1.5, 0.5}, {1, 1, 
         0}}, {{1.5, 1.5, -0.5}, {1.5, 1.5, 0.5}, {2, 2, 0}}, {{2.5, 
         2.5, -0.5}, {2.5, 2.5, 0.5}, {2, 2, 0}}, {{1.5, 0.5, 0.5}, {0.5, 0.5,
          0.5}, {1, 1, 0}}, {{1.5, 0.5, 0.5}, {0.5, 0.5, 0.5}, {1, 0, 1}}, {{
         1.5, 0.5, 0.5}, {1.5, 1.5, 0.5}, {1, 1, 0}}, {{1.5, 0.5, 0.5}, {1.5, 
         1.5, 0.5}, {2, 1, 1}}, {{1.5, 0.5, 0.5}, {1.5, 0.5, 1.5}, {1, 0, 
         1}}, {{1.5, 0.5, 0.5}, {1.5, 0.5, 1.5}, {2, 1, 1}}, {{2.5, 1.5, 
         0.5}, {1.5, 1.5, 0.5}, {2, 2, 0}}, {{2.5, 1.5, 0.5}, {1.5, 1.5, 
         0.5}, {2, 1, 1}}, {{2.5, 1.5, 0.5}, {2.5, 2.5, 0.5}, {2, 2, 0}}, {{
         2.5, 1.5, 0.5}, {2.5, 1.5, 1.5}, {2, 1, 1}}, {{2.5, 0.5, 1.5}, {1.5, 
         0.5, 1.5}, {2, 1, 1}}, {{2.5, 0.5, 1.5}, {1.5, 0.5, 1.5}, {2, 0, 
         2}}, {{2.5, 0.5, 1.5}, {2.5, 1.5, 1.5}, {2, 1, 1}}, {{2.5, 0.5, 
         1.5}, {2.5, 0.5, 2.5}, {2, 0, 2}}, {{0.5, 1.5, 0.5}, {0.5, 0.5, 
         0.5}, {1, 1, 0}}, {{0.5, 1.5, 0.5}, {0.5, 0.5, 0.5}, {0, 1, 1}}, {{
         0.5, 1.5, 0.5}, {1.5, 1.5, 0.5}, {1, 1, 0}}, {{0.5, 1.5, 0.5}, {1.5, 
         1.5, 0.5}, {1, 2, 1}}, {{0.5, 1.5, 0.5}, {0.5, 1.5, 1.5}, {0, 1, 
         1}}, {{0.5, 1.5, 0.5}, {0.5, 1.5, 1.5}, {1, 2, 1}}, {{1.5, 2.5, 
         0.5}, {1.5, 1.5, 0.5}, {2, 2, 0}}, {{1.5, 2.5, 0.5}, {1.5, 1.5, 
         0.5}, {1, 2, 1}}, {{1.5, 2.5, 0.5}, {2.5, 2.5, 0.5}, {2, 2, 0}}, {{
         1.5, 2.5, 0.5}, {1.5, 2.5, 1.5}, {1, 2, 1}}, {{1.5, 1.5, 1.5}, {1.5, 
         1.5, 0.5}, {2, 1, 1}}, {{1.5, 1.5, 1.5}, {1.5, 1.5, 0.5}, {1, 2, 
         1}}, {{1.5, 1.5, 1.5}, {1.5, 0.5, 1.5}, {2, 1, 1}}, {{1.5, 1.5, 
         1.5}, {1.5, 0.5, 1.5}, {1, 1, 2}}, {{1.5, 1.5, 1.5}, {2.5, 1.5, 
         1.5}, {2, 1, 1}}, {{1.5, 1.5, 1.5}, {0.5, 1.5, 1.5}, {1, 2, 1}}, {{
         1.5, 1.5, 1.5}, {0.5, 1.5, 1.5}, {1, 1, 2}}, {{1.5, 1.5, 1.5}, {1.5, 
         2.5, 1.5}, {1, 2, 1}}, {{1.5, 1.5, 1.5}, {1.5, 1.5, 2.5}, {1, 1, 
         2}}, {{0.5, 2.5, 1.5}, {0.5, 1.5, 1.5}, {1, 2, 1}}, {{0.5, 2.5, 
         1.5}, {0.5, 1.5, 1.5}, {0, 2, 2}}, {{0.5, 2.5, 1.5}, {1.5, 2.5, 
         1.5}, {1, 2, 1}}, {{0.5, 2.5, 1.5}, {0.5, 2.5, 2.5}, {0, 2, 
         2}}}]]}, 
    {RGBColor[0, 0, 1], Opacity[0.9], 
     Polygon3DBox[
      NCache[{{{0, 0, 0}, {1, 0, 0}, {
         Rational[1, 2], Rational[1, 2], Rational[-1, 2]}}, {{1, 1, 0}, {1, 0,
          0}, {Rational[1, 2], Rational[1, 2], Rational[-1, 2]}}, {{1, 1, 
         0}, {1, 0, 0}, {Rational[3, 2], Rational[1, 2], Rational[1, 2]}}, {{
         1, 1, 0}, {2, 1, 0}, {
         Rational[3, 2], Rational[3, 2], Rational[-1, 2]}}, {{1, 1, 0}, {2, 1,
          0}, {Rational[3, 2], Rational[1, 2], Rational[1, 2]}}, {{1, 1, 0}, {
         1, 1, 1}, {Rational[3, 2], Rational[1, 2], Rational[1, 2]}}, {{1, 1, 
         0}, {1, 1, 1}, {Rational[1, 2], Rational[3, 2], Rational[1, 2]}}, {{
         2, 2, 0}, {2, 1, 0}, {
         Rational[3, 2], Rational[3, 2], Rational[-1, 2]}}, {{2, 2, 0}, {2, 1,
          0}, {Rational[5, 2], Rational[3, 2], Rational[1, 2]}}, {{2, 2, 0}, {
         3, 2, 0}, {Rational[5, 2], Rational[5, 2], Rational[-1, 2]}}, {{2, 2,
          0}, {3, 2, 0}, {Rational[5, 2], Rational[3, 2], Rational[1, 2]}}, {{
         2, 2, 0}, {2, 2, 1}, {
         Rational[5, 2], Rational[3, 2], Rational[1, 2]}}, {{2, 2, 0}, {2, 2, 
         1}, {Rational[3, 2], Rational[5, 2], Rational[1, 2]}}, {{1, 0, 1}, {
         1, 0, 0}, {Rational[3, 2], Rational[1, 2], Rational[1, 2]}}, {{1, 0, 
         1}, {2, 0, 1}, {Rational[3, 2], Rational[1, 2], Rational[1, 2]}}, {{
         1, 0, 1}, {1, 1, 1}, {
         Rational[3, 2], Rational[1, 2], Rational[1, 2]}}, {{2, 1, 1}, {2, 1, 
         0}, {Rational[3, 2], Rational[1, 2], Rational[1, 2]}}, {{2, 1, 1}, {
         2, 1, 0}, {Rational[5, 2], Rational[3, 2], Rational[1, 2]}}, {{2, 1, 
         1}, {2, 0, 1}, {Rational[3, 2], Rational[1, 2], Rational[1, 2]}}, {{
         2, 1, 1}, {2, 0, 1}, {
         Rational[5, 2], Rational[1, 2], Rational[3, 2]}}, {{2, 1, 1}, {3, 1, 
         1}, {Rational[5, 2], Rational[3, 2], Rational[1, 2]}}, {{2, 1, 1}, {
         3, 1, 1}, {Rational[5, 2], Rational[1, 2], Rational[3, 2]}}, {{2, 1, 
         1}, {1, 1, 1}, {Rational[3, 2], Rational[1, 2], Rational[1, 2]}}, {{
         2, 1, 1}, {1, 1, 1}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}}, {{2, 1, 1}, {2, 2, 
         1}, {Rational[5, 2], Rational[3, 2], Rational[1, 2]}}, {{2, 1, 1}, {
         2, 2, 1}, {Rational[3, 2], Rational[3, 2], Rational[3, 2]}}, {{2, 1, 
         1}, {2, 1, 2}, {Rational[5, 2], Rational[1, 2], Rational[3, 2]}}, {{
         2, 1, 1}, {2, 1, 2}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}}, {{2, 0, 2}, {2, 0, 
         1}, {Rational[5, 2], Rational[1, 2], Rational[3, 2]}}, {{2, 0, 2}, {
         3, 0, 2}, {Rational[5, 2], Rational[1, 2], Rational[3, 2]}}, {{2, 0, 
         2}, {2, 1, 2}, {Rational[5, 2], Rational[1, 2], Rational[3, 2]}}, {{
         0, 1, 1}, {1, 1, 1}, {
         Rational[1, 2], Rational[3, 2], Rational[1, 2]}}, {{1, 2, 1}, {1, 1, 
         1}, {Rational[1, 2], Rational[3, 2], Rational[1, 2]}}, {{1, 2, 1}, {
         1, 1, 1}, {Rational[3, 2], Rational[3, 2], Rational[3, 2]}}, {{1, 2, 
         1}, {2, 2, 1}, {Rational[3, 2], Rational[5, 2], Rational[1, 2]}}, {{
         1, 2, 1}, {2, 2, 1}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}}, {{1, 2, 1}, {1, 2, 
         2}, {Rational[3, 2], Rational[3, 2], Rational[3, 2]}}, {{1, 2, 1}, {
         1, 2, 2}, {Rational[1, 2], Rational[5, 2], Rational[3, 2]}}, {{1, 1, 
         2}, {1, 1, 1}, {Rational[3, 2], Rational[3, 2], Rational[3, 2]}}, {{
         1, 1, 2}, {2, 1, 2}, {
         Rational[3, 2], Rational[3, 2], Rational[3, 2]}}, {{1, 1, 2}, {1, 2, 
         2}, {Rational[3, 2], Rational[3, 2], Rational[3, 2]}}, {{0, 2, 2}, {
         1, 2, 2}, {Rational[1, 2], Rational[5, 2], Rational[3, 2]}}}, {{{0, 
         0, 0}, {1, 0, 0}, {0.5, 0.5, -0.5}}, {{1, 1, 0}, {1, 0, 0}, {0.5, 
         0.5, -0.5}}, {{1, 1, 0}, {1, 0, 0}, {1.5, 0.5, 0.5}}, {{1, 1, 0}, {2,
          1, 0}, {1.5, 1.5, -0.5}}, {{1, 1, 0}, {2, 1, 0}, {1.5, 0.5, 
         0.5}}, {{1, 1, 0}, {1, 1, 1}, {1.5, 0.5, 0.5}}, {{1, 1, 0}, {1, 1, 
         1}, {0.5, 1.5, 0.5}}, {{2, 2, 0}, {2, 1, 0}, {1.5, 1.5, -0.5}}, {{2, 
         2, 0}, {2, 1, 0}, {2.5, 1.5, 0.5}}, {{2, 2, 0}, {3, 2, 0}, {2.5, 
         2.5, -0.5}}, {{2, 2, 0}, {3, 2, 0}, {2.5, 1.5, 0.5}}, {{2, 2, 0}, {2,
          2, 1}, {2.5, 1.5, 0.5}}, {{2, 2, 0}, {2, 2, 1}, {1.5, 2.5, 0.5}}, {{
         1, 0, 1}, {1, 0, 0}, {1.5, 0.5, 0.5}}, {{1, 0, 1}, {2, 0, 1}, {1.5, 
         0.5, 0.5}}, {{1, 0, 1}, {1, 1, 1}, {1.5, 0.5, 0.5}}, {{2, 1, 1}, {2, 
         1, 0}, {1.5, 0.5, 0.5}}, {{2, 1, 1}, {2, 1, 0}, {2.5, 1.5, 0.5}}, {{
         2, 1, 1}, {2, 0, 1}, {1.5, 0.5, 0.5}}, {{2, 1, 1}, {2, 0, 1}, {2.5, 
         0.5, 1.5}}, {{2, 1, 1}, {3, 1, 1}, {2.5, 1.5, 0.5}}, {{2, 1, 1}, {3, 
         1, 1}, {2.5, 0.5, 1.5}}, {{2, 1, 1}, {1, 1, 1}, {1.5, 0.5, 0.5}}, {{
         2, 1, 1}, {1, 1, 1}, {1.5, 1.5, 1.5}}, {{2, 1, 1}, {2, 2, 1}, {2.5, 
         1.5, 0.5}}, {{2, 1, 1}, {2, 2, 1}, {1.5, 1.5, 1.5}}, {{2, 1, 1}, {2, 
         1, 2}, {2.5, 0.5, 1.5}}, {{2, 1, 1}, {2, 1, 2}, {1.5, 1.5, 1.5}}, {{
         2, 0, 2}, {2, 0, 1}, {2.5, 0.5, 1.5}}, {{2, 0, 2}, {3, 0, 2}, {2.5, 
         0.5, 1.5}}, {{2, 0, 2}, {2, 1, 2}, {2.5, 0.5, 1.5}}, {{0, 1, 1}, {1, 
         1, 1}, {0.5, 1.5, 0.5}}, {{1, 2, 1}, {1, 1, 1}, {0.5, 1.5, 0.5}}, {{
         1, 2, 1}, {1, 1, 1}, {1.5, 1.5, 1.5}}, {{1, 2, 1}, {2, 2, 1}, {1.5, 
         2.5, 0.5}}, {{1, 2, 1}, {2, 2, 1}, {1.5, 1.5, 1.5}}, {{1, 2, 1}, {1, 
         2, 2}, {1.5, 1.5, 1.5}}, {{1, 2, 1}, {1, 2, 2}, {0.5, 2.5, 1.5}}, {{
         1, 1, 2}, {1, 1, 1}, {1.5, 1.5, 1.5}}, {{1, 1, 2}, {2, 1, 2}, {1.5, 
         1.5, 1.5}}, {{1, 1, 2}, {1, 2, 2}, {1.5, 1.5, 1.5}}, {{0, 2, 2}, {1, 
         2, 2}, {0.5, 2.5, 1.5}}}]]}, 
    {RGBColor[1, 1, 0], Opacity[0.9], 
     Polygon3DBox[
      NCache[{{{0, 0, 0}, {1, 0, 0}, {
         Rational[1, 2], Rational[1, 2], Rational[1, 2]}}, {{1, 1, 0}, {1, 0, 
         0}, {Rational[1, 2], Rational[1, 2], Rational[1, 2]}}, {{1, 1, 0}, {
         2, 1, 0}, {Rational[3, 2], Rational[3, 2], Rational[1, 2]}}, {{1, 1, 
         0}, {1, 1, 1}, {Rational[1, 2], Rational[1, 2], Rational[1, 2]}}, {{
         1, 1, 0}, {1, 1, 1}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}}, {{2, 2, 0}, {2, 1, 
         0}, {Rational[3, 2], Rational[3, 2], Rational[1, 2]}}, {{2, 2, 0}, {
         3, 2, 0}, {Rational[5, 2], Rational[5, 2], Rational[1, 2]}}, {{2, 2, 
         0}, {2, 2, 1}, {Rational[3, 2], Rational[3, 2], Rational[1, 2]}}, {{
         2, 2, 0}, {2, 2, 1}, {
         Rational[5, 2], Rational[5, 2], Rational[1, 2]}}, {{1, 0, 1}, {1, 0, 
         0}, {Rational[1, 2], Rational[1, 2], Rational[1, 2]}}, {{1, 0, 1}, {
         2, 0, 1}, {Rational[3, 2], Rational[1, 2], Rational[3, 2]}}, {{1, 0, 
         1}, {1, 1, 1}, {Rational[1, 2], Rational[1, 2], Rational[1, 2]}}, {{
         1, 0, 1}, {1, 1, 1}, {
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}}, {{2, 1, 1}, {2, 1, 
         0}, {Rational[3, 2], Rational[3, 2], Rational[1, 2]}}, {{2, 1, 1}, {
         2, 0, 1}, {Rational[3, 2], Rational[1, 2], Rational[3, 2]}}, {{2, 1, 
         1}, {3, 1, 1}, {Rational[5, 2], Rational[3, 2], Rational[3, 2]}}, {{
         2, 1, 1}, {1, 1, 1}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}}, {{2, 1, 1}, {1, 1, 
         1}, {Rational[3, 2], Rational[1, 2], Rational[3, 2]}}, {{2, 1, 1}, {
         2, 2, 1}, {Rational[3, 2], Rational[3, 2], Rational[1, 2]}}, {{2, 1, 
         1}, {2, 2, 1}, {Rational[5, 2], Rational[3, 2], Rational[3, 2]}}, {{
         2, 1, 1}, {2, 1, 2}, {
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}}, {{2, 1, 1}, {2, 1, 
         2}, {Rational[5, 2], Rational[3, 2], Rational[3, 2]}}, {{2, 0, 2}, {
         2, 0, 1}, {Rational[3, 2], Rational[1, 2], Rational[3, 2]}}, {{2, 0, 
         2}, {3, 0, 2}, {Rational[5, 2], Rational[1, 2], Rational[5, 2]}}, {{
         2, 0, 2}, {2, 1, 2}, {
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}}, {{2, 0, 2}, {2, 1, 
         2}, {Rational[5, 2], Rational[1, 2], Rational[5, 2]}}, {{0, 1, 1}, {
         1, 1, 1}, {Rational[1, 2], Rational[1, 2], Rational[1, 2]}}, {{0, 1, 
         1}, {1, 1, 1}, {Rational[1, 2], Rational[3, 2], Rational[3, 2]}}, {{
         1, 2, 1}, {1, 1, 1}, {
         Rational[3, 2], Rational[3, 2], Rational[1, 2]}}, {{1, 2, 1}, {1, 1, 
         1}, {Rational[1, 2], Rational[3, 2], Rational[3, 2]}}, {{1, 2, 1}, {
         2, 2, 1}, {Rational[3, 2], Rational[3, 2], Rational[1, 2]}}, {{1, 2, 
         1}, {2, 2, 1}, {Rational[3, 2], Rational[5, 2], Rational[3, 2]}}, {{
         1, 2, 1}, {1, 2, 2}, {
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}}, {{1, 2, 1}, {1, 2, 
         2}, {Rational[3, 2], Rational[5, 2], Rational[3, 2]}}, {{1, 1, 2}, {
         1, 1, 1}, {Rational[3, 2], Rational[1, 2], Rational[3, 2]}}, {{1, 1, 
         2}, {1, 1, 1}, {Rational[1, 2], Rational[3, 2], Rational[3, 2]}}, {{
         1, 1, 2}, {2, 1, 2}, {
         Rational[3, 2], Rational[1, 2], Rational[3, 2]}}, {{1, 1, 2}, {2, 1, 
         2}, {Rational[3, 2], Rational[3, 2], Rational[5, 2]}}, {{1, 1, 2}, {
         1, 2, 2}, {Rational[1, 2], Rational[3, 2], Rational[3, 2]}}, {{1, 1, 
         2}, {1, 2, 2}, {Rational[3, 2], Rational[3, 2], Rational[5, 2]}}, {{
         0, 2, 2}, {1, 2, 2}, {
         Rational[1, 2], Rational[3, 2], Rational[3, 2]}}, {{0, 2, 2}, {1, 2, 
         2}, {Rational[1, 2], Rational[5, 2], Rational[5, 2]}}}, {{{0, 0, 
         0}, {1, 0, 0}, {0.5, 0.5, 0.5}}, {{1, 1, 0}, {1, 0, 0}, {0.5, 0.5, 
         0.5}}, {{1, 1, 0}, {2, 1, 0}, {1.5, 1.5, 0.5}}, {{1, 1, 0}, {1, 1, 
         1}, {0.5, 0.5, 0.5}}, {{1, 1, 0}, {1, 1, 1}, {1.5, 1.5, 0.5}}, {{2, 
         2, 0}, {2, 1, 0}, {1.5, 1.5, 0.5}}, {{2, 2, 0}, {3, 2, 0}, {2.5, 2.5,
          0.5}}, {{2, 2, 0}, {2, 2, 1}, {1.5, 1.5, 0.5}}, {{2, 2, 0}, {2, 2, 
         1}, {2.5, 2.5, 0.5}}, {{1, 0, 1}, {1, 0, 0}, {0.5, 0.5, 0.5}}, {{1, 
         0, 1}, {2, 0, 1}, {1.5, 0.5, 1.5}}, {{1, 0, 1}, {1, 1, 1}, {0.5, 0.5,
          0.5}}, {{1, 0, 1}, {1, 1, 1}, {1.5, 0.5, 1.5}}, {{2, 1, 1}, {2, 1, 
         0}, {1.5, 1.5, 0.5}}, {{2, 1, 1}, {2, 0, 1}, {1.5, 0.5, 1.5}}, {{2, 
         1, 1}, {3, 1, 1}, {2.5, 1.5, 1.5}}, {{2, 1, 1}, {1, 1, 1}, {1.5, 1.5,
          0.5}}, {{2, 1, 1}, {1, 1, 1}, {1.5, 0.5, 1.5}}, {{2, 1, 1}, {2, 2, 
         1}, {1.5, 1.5, 0.5}}, {{2, 1, 1}, {2, 2, 1}, {2.5, 1.5, 1.5}}, {{2, 
         1, 1}, {2, 1, 2}, {1.5, 0.5, 1.5}}, {{2, 1, 1}, {2, 1, 2}, {2.5, 1.5,
          1.5}}, {{2, 0, 2}, {2, 0, 1}, {1.5, 0.5, 1.5}}, {{2, 0, 2}, {3, 0, 
         2}, {2.5, 0.5, 2.5}}, {{2, 0, 2}, {2, 1, 2}, {1.5, 0.5, 1.5}}, {{2, 
         0, 2}, {2, 1, 2}, {2.5, 0.5, 2.5}}, {{0, 1, 1}, {1, 1, 1}, {0.5, 0.5,
          0.5}}, {{0, 1, 1}, {1, 1, 1}, {0.5, 1.5, 1.5}}, {{1, 2, 1}, {1, 1, 
         1}, {1.5, 1.5, 0.5}}, {{1, 2, 1}, {1, 1, 1}, {0.5, 1.5, 1.5}}, {{1, 
         2, 1}, {2, 2, 1}, {1.5, 1.5, 0.5}}, {{1, 2, 1}, {2, 2, 1}, {1.5, 2.5,
          1.5}}, {{1, 2, 1}, {1, 2, 2}, {0.5, 1.5, 1.5}}, {{1, 2, 1}, {1, 2, 
         2}, {1.5, 2.5, 1.5}}, {{1, 1, 2}, {1, 1, 1}, {1.5, 0.5, 1.5}}, {{1, 
         1, 2}, {1, 1, 1}, {0.5, 1.5, 1.5}}, {{1, 1, 2}, {2, 1, 2}, {1.5, 0.5,
          1.5}}, {{1, 1, 2}, {2, 1, 2}, {1.5, 1.5, 2.5}}, {{1, 1, 2}, {1, 2, 
         2}, {0.5, 1.5, 1.5}}, {{1, 1, 2}, {1, 2, 2}, {1.5, 1.5, 2.5}}, {{0, 
         2, 2}, {1, 2, 2}, {0.5, 1.5, 1.5}}, {{0, 2, 2}, {1, 2, 2}, {0.5, 2.5,
          2.5}}}]]}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  ImageSize->{356.6586539871303, 355.9093875586028},
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.1101675389441468`, -1.4015886251566427`, 2.243377427767776},
  ViewVertical->{-0.9471815803977318, 0.2898582265223675, 
   0.1372197590457111}]], "Output",
 CellChangeTimes->{{3.941254560816202*^9, 3.941254572934979*^9}, {
   3.941254646989193*^9, 3.941254661949937*^9}, 3.941254761409877*^9, {
   3.941254833106882*^9, 3.941254865900153*^9}, 3.9414034451410933`*^9},
 CellLabel->"Out[13]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzUvXecXNd1Jvi66lXqnBvd6AYaOaduhG7EAgESJIgGcxCVSAENUhIpBpAi
KZJmgbZIy2nscc5hKNkAQdG0KK2k8WzTki3bY6/s9czaO17NegCSEoNJ2pQs
ySuh39xz77n3nfvqe68K8v6xC/yquvtVeOd830k3z9x2/x2zd912/weP3TZ+
6L7b7rnjg8dOjl92933qUr4lCHL/WT3+bDwI1e9REOCnvwyC/x9e+DP9a6HG
f9sH/R3Mi/f9qf61NCdep4f8O7gg3v8V/Wu+Kl/Pm2s1ee379Z+x36n/heaa
ez/9+179ZyKWJf5MLkp8+5/4Eul3F8Adv5f+mdr/lz6TqvkP9hnvGvhMTX5n
3peXfgImi/Yzc/Y9/FNzI63lT/17RE4icw/3T8plLDek12viEYm3/L/hIC+y
qnfcccfc7bffTj/NCxXxJgNcoXbixIlIPeiN/pvL4s3/Sf9asm+u8Qf0m+k9
6u/6D/0hPeXovTlzL/02/meFM28tiY990Ugv7xXkfI30X+ia/oKC+LIvOBms
nQmxnU3UfUUovuJ/AfKE4IPimntf3Zd9zslTBPKYd4b2Wo2/JoplNd/yAhDJ
QJiXGPNnQk9Me/8oxtB86WfcS+U07fSref8rWsRXPA/kqqTqCbiIv5a/8ffd
1dZsyGtW74L7hMwFnwaStQEpOtynpa8/6652AJQ7wfdIr38G3LsDaNMNvuf/
Ed9z2v+M/p4u8JkecO1fxff8XiyPe08XkKcP6Ppd8T2fAvKge/eB75bf80kg
Tw/4zAC49h3xPf/B/x4tj763Zm4IfPrb4tO/495p3uRU7gUqDbk3y6/4rVgA
RzQSeth9+l/Ep38zKap3xxH36rfEZ34d3BEpOuo+/U3x6V9zV2OJFrnf3hHv
/BVwnxEg5aL4mnPIfxLf88vu2xcCKRfrV/Wf+Zq0urfEV/wiEGU0VZSCvIF7
/W3xfb/gRBpLEykoet8svkkK9nNAsBjN8fjLnVo5IPY/im/82eSnvXeuMNc8
93xDfPpngDxCCqfiSnBNfs9POymWAilWgU+/Lj79U0CKpeAza8C118T3/IT/
uv6e5UCetU5a+ekfj6Vw70b4rXOfflV8+hPg3gi1De7T3xCf/lFw71VA8o3u
018Xn37S/7S+92pw783u06+IT3/cXU2YHhJgi3vzy+IrfjgWwBFYMJfoDarY
dSV2YO3Lw3TCfe1L4mufcFdtElfX7f8g1M+qUSC+exHQeitQ45y4Sw0Ij+5X
MveryfuhoLINXPsf4n6PO610eddGX4vCyg7wPf8gvucxILctGKXcFSA3istT
gJf/W9zvUSe3rv066GtHwWf09+gILaX9GJC24r4nYSILABzTscjW0D3xHnbi
6ZqtYL42Cua46VV112rgVgAJLy243/+7uOWDQKf2+ObqWd1qfMQ8AtJwTosU
WfyBgqEniVXpa+KuH3VXO+N7lbWSU/uCqKZaFLfOsNLGEGrxHb1v3+u+6f8S
338/0MqUfiXpD5H7anNj1fpVt1ZeSTdnhavxjT0T2edu/PfixifdVS6natKM
c9x6tjrSzcwt83Q71xZHtrPfffN/E/e7Fyjab6g3uKnn0ZGCVvDux+g+dLfC
hVMngu+fOh5cuO3KwPUSoHLsEnfX/1Pc9W5fPlGOFQmyC9cf6YzuPqbvGD10
XzBfmw1Cul2QpxvOjw+bVjmqGQ+6G/6duOFHYjWdeOaGupOB3vP9e4730k0r
5kb2JlqzPqDZpe5GfytudCfQbNjcqKaeLkxNVC7cc7xy4eHjQWuskYOQSfcM
5TJw8/8qbvlhoJsxuNDqZW/Z5t+SJLKtKQ/Ey8Et/4u45QfjWzqrMYVqwWop
bxt0+Jjqf6g1eAW49jfivnc4zMdiBS9cf2WnJa+LFaxOxJi2AwWvBDj/7+JG
J4CC5pYF+s750eEC3dLeNugGwKJm85VAFnnfWaegKagLc0JBd7deAGcFaHQE
3O2vxd2OAS25kK8GsVdIKvsAwCVwm6Pg2l+JW3/AKbrE3JAgs3Yjb9gPkEVd
Qle5L5S3uRVoaKrqotRO3nAQgIv6v65xN/yquOH73dVlfGuhV5DTz3kike6i
7zQIEEUNnmvja67NJzsz3wtU5cJfegmUYUg/F7xQFHB35fVaINDY/M/i5u9x
anNrgb7CekmQB7dcoJ9DG8//anx8nO5xHUBaf+9fiLvdAlTldob0F6uqZVbf
caGBO7rhuhm6ZzWGFlcdUst3uau2NRfEXmK19O42wsA+Mjsyf9fsjAfwNbGq
DtOcu0Ncl3xCSHAT0JxbObVAGFq6LEUth5LHpm9r6DfG9uVE2q2FiBJC3OhE
Wxvbl3UjSPYIg64+4q7lQJ69AciwC8pwPQBiLQAiBNIMs8cxKcYQQTJG0uyE
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
/QmLc64/JDBEjC4OzCHZigl1Y8sF9YCoZvOlYK5JL+j4KAMuFqVyEWoufi/G
f1Uq/KGc92OqVIX/LpwvOhl5xYJbU1Ni5O0piNN7aGA/Rp6DE6+RKHqrb99W
j++oAPXdl4Krm2xJMwP2rALpDua8rWJVuoF+7BMMqPL7uNlzf8OwCk+z9MgF
B0Ep1Quac4iGcR52FQkj+tTT0xr6Tz29TU/7X52Kv99OiBmYSjBAUUkx0M0M
yPUIZcvA6y2OAd3BRC0ItysAt5mj1w3uuei7ekXgt88FhLxG/6ome8n3exx4
XmA4KBFL9DW0c+n81ERFgdMSPfrhlqimRyntKdYtJk9oEloOAA56QEOuAjhY
wq5wzVWTjPu00rA+T6zISNCy7Rw6Hrbh7NALeLBbabzyVsxDTqTo5Dp0u1iW
GPnmOXWhnpGj6WkbMfIe8NIy/Vygj9ttuO1pHnq7ZsDEJRlMQG84n/SGQvQM
Bx/6yZ4BM/fyDEZkJ57dm1pRopNEPF+9jpt+5madWIjearNEzA03se0qc6+C
1ZFJcaIQ0qTMf+d8PSmNkoVPCnCTonQT7Sp3HytEjx7LlfjwBuLlR1Wt+9kT
cajaB7J3D2j1VQA5NmMIcgI7nZQmywWcRZDrLEttbfgdfXafZlVauRJrA04n
QyCRt1m6HFG0n0Pgpw2lkqIg+u55y4/NIjKMNcvPu5tzGnrQILECNp2cvRnk
yG4RRM5CnhP31S+NSIKKIMsjfpaCFBOC0FYG/KzF/AwDftqdI9E4mOHo+dNB
9C2tj8kfigiiRVMTphPUMNf7BAEH8s8qyoEDUIwnFfVxMfRen7AW1I3bAxqK
KOcM03OOfegTH5/RpNEL5SYZW5LBWP2m0HnLlv5rJW5BjoACrd0t4wp0SUl6
nT1tbvsfn/k3kYaKA7OQ0mxcqrteljN9wpcgVeVsqnYDqrpBM7IVUDVEzyER
JGc72LSEuBkH3OSBN7ULbig1xduK1KWl0bTSraAXIRVd9H5TyXCWbUcRlLME
na8n6AepFSRBCYfL8CrvrJxWcQgTU6XEVGQRsgqZF3g8cBoUEt3AvRBnA46z
bv130SuwzdpDzZfsBrPdkSGoIDpcTTee0bhcBFjSuzBSO4dMxa2JeYWFNXQF
li5iq5RBT6OsxPS8qxn/8Y5la8skJXCkTAFSukCTsw2Q0udI6csmZRGoFvKg
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
1ZvaFJTPDhLIN/2YLbd4N0nr/umVhF1bJPP6YlFD4ajp3H8NyOvx0WXv8iD1
TLMEIP3LJiCtpUBqe21kmkGQHuDSNLG6z4xD3Sh25KQpck/0lCy06/7EQVuw
9nvTj0d2KzvlMc2iuygRAjLQXQvQrQIw22LgXNbmkzAXAXMuAuz/Kv4Ktwal
HQTc2Evbo/o8hcJslRFPWURnh31siGgjxMmWf9w2CzTOzw6a+MEzFwnztNLN
Lp6U3bP2fEZ5JCC1Fx9OCRrrAfL7DEReWmuMvEdUCJD/G4G87YRLIv+Ih3wr
SHA9APndvIod2Tovbjbox6FElWtk8BUDdP3A29zFgG9L2REQse1IOAJ/AwAf
nRHTng7+GHh7YsaMBv+/8vsC0QjrBFG84MCvgF4gBL5ZjFlAZs+D4YWoEk+X
sAFHuRAREHrWHnDnvJnoEUoSyClRqt7uSg6Lvn/Asp8vZdDZCNBHJ5k0RL/k
mX4Qr8fTyP9dE8jXPOTtsIvs++kBIX47F8YpZm/BB7HHgJ/TjhAmTb+SAP/u
ZsAfbj7YbwJ1iunFCb2ZgAEn1450/Ef1c1HSJbH/+3TovVgfQ1/MiDgS+knR
JgGxPi+nmMZBpytp8ibuaJPvvEjUE8XiIIj7tksahZ4tgASzKauehCOJsNbd
iIecpsAfpvvaRTNQANkWMbApY/eCMCPsdGZYfm+Sg1mdkbI4kP2hAzD8+7lX
tsQnUjkI7awG+iOK297pPuDD/g8A9i4Q7UOgWU64gK3Z7XkwskNofbYLhBnR
p0P7QTHpB5aKoZgGKo+txM3QQHVnP9MQxI23uiws49FkKg1umzRt2Y05sHFI
e8//8DnQ6KdzUJRq6QensT6Qcldn2H4Rh54OZ/ZodvvIvw3xPoG4DTw28+ZA
i3+bPx6GENd/ZUScRN2jLV8g7ppVXaDHP7S4s1qcZ/sB0itcA59zm7DwYkaU
adcWXkDWzR0YhRjs27NbfHbnHFlpdoNQkxXud4BaB22eanJ/scryWgOxDPBJ
xIsBVxxyahD8DybBNxrSDndK+uB/tnYl4HZV1fnkju++l7wkjxAywMcjMmSA
aoVCQoDcUMbEIBIhAUJJTV6cwAShYFDwkTjPFSkqLfrh0GpTO4J0TO1Xa2ut
tZ+1gxTo3Kq1LbV2sOXd3r2Gvdfa9z/n3Rf6vu/ed885++y91r/XWntae+3j
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"39b923e1-676c-416f-be68-6a7863e14349"]
}, Open  ]]
},
WindowSize->{808, 863},
WindowMargins->{{427, Automatic}, {Automatic, 10}},
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6f7ce249-b1bc-4c24-a96c-9baffb3d92f3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 5444, 146, 556, "Input",ExpressionUUID->"86a360cf-f174-4c7c-8532-398bf87ac3c9"],
Cell[6027, 170, 6418, 118, 364, "Output",ExpressionUUID->"e35feafc-bdae-4c8d-b7ad-eb97be63472d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12482, 293, 11230, 295, 1039, "Input",ExpressionUUID->"620ecf43-49d0-4232-a013-1fa5b6a24a50"],
Cell[23715, 590, 77742, 1229, 373, 29798, 443, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"39b923e1-676c-416f-be68-6a7863e14349"]
}, Open  ]]
}
]
*)

